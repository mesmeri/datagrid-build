{"version":3,"sources":["components/error-message/error-message.js","components/error-boundry/error-boundry.js","actions/actions.js","utils/local-storage.js","reducers/update-columns.js","reducers/update-filters.js","reducers/update-general.js","reducers/reducer.js","store/store.js","components/sort-indicators/sort-indicators.js","services/data-service.js","components/table/table-headers/table-headers.js","components/table/row/row.js","components/table/native-table/native-table.js","components/table/row-renderer/row-renderer.js","components/table/virtualized-table/virtualized-table.js","utils/utils.js","reducers/selectors.js","components/table/table.js","components/header/header.js","components/spinner/spinner.js","components/search/search.js","components/control-bar/toggle-married/toggle-married.js","components/control-bar/select-shirt-size/select-shirt-size.js","components/control-bar/delete-rows-btn/delete-rows-btn.js","components/control-bar/hide-columns-panel/hide-columns-panel.js","components/control-bar/download-btn/download-btn.js","components/control-bar/control-bar.js","App.js","index.js"],"names":["ErrorMessage","className","ErrorBoundry","state","error","this","setState","props","children","Component","singleRowSelected","rowId","type","payload","multipleRowsSelected","startingState","columns","sortedColumns","hiddenColumns","filters","searchFilter","isMarriedFilter","shirtSizeFilter","general","selectedRows","data","loading","virtualization","updateColumns","action","ind","findIndex","el","id","newSortedColumns","slice","column","find","columnId","indexOf","newColumn","direction","index","updateFilters","updateGeneral","dataWithoutDeletedRows","forEach","rowIndex","item","splice","initialState","reducer","store","createStore","devToolsEnhancer","subscribe","currentState","getState","args","serializedData","JSON","stringify","localStorage","setItem","key","err","saveState","mapDispatchToProps","columnDirectionChanged","connect","handleChangeDirection","value","dispatch","checked","onChange","DataService","Promise","resolve","setTimeout","mockData","str","headers","TableHeaders","toggleColumn","isShiftPressed","columnSelected","columnUnselected","columnClearedAll","length","e","target","tagName","shiftKey","style","service","count","styleObj","width","items","map","includes","mapStrToDataField","classes","columnInfo","push","join","onClick","handleClick","React","PureComponent","cls","fields","cells","field","married","isMarried","gender","listItems","firstName","lastName","ctrlKey","handleSelectRow","minHeight","RowRenderer","VirtualizedTable","height","window","innerHeight","itemCount","itemSize","innerWidth","itemData","findMatches","resultData","filter","Object","values","toLowerCase","getDisplayData","result","directions","_","orderBy","sortItems","displayData","handleToggleVirtualization","href","Spinner","searchFilterSet","placeholder","trim","handleSearch","isMarriedFilterSet","handleChange","htmlFor","cursor","sizeOptions","label","animatedComponents","makeAnimated","shirtSizesFilterSet","closeMenuOnSelect","components","isMulti","name","styles","control","provided","borderColor","isFocused","boxShadow","options","classNamePrefix","selectedOptions","handleSelection","rowsDeleted","disabled","fontStyle","columnWasHidden","columnWasShown","isChecked","handleCheck","allHeaders","ControlBar","App","toggleVirtualization","dataService","getData","dataLoaded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38947782.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<div className=\"error-boundry\">\r\n\t\t\t<span>\r\n\t\t\t\tAn error ocured...Please refresh the page\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage","import React, { Component } from 'react'\r\nimport ErrorMessage from '../error-message/error-message'\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch (error) {\r\n\t\tthis.setState( {\r\n\t\t\terror: true,\r\n\t\t})\r\n\t} \r\n\r\n\trender () {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn (\r\n\t\t\t\t<ErrorMessage />\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\treturn (this.props.children)\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry","const dataLoaded = (data) => {\r\n\treturn {\r\n\t\ttype: 'DATA_LOADED',\r\n\t\tpayload: data,\r\n\t}\r\n}\r\n\r\nconst toggleVirtualization = () => {\r\n\treturn {\r\n\t\ttype: 'TOGGLE_VIRTUALIZATION',\r\n\t}\r\n}\r\n\r\nconst columnSelected = (columnId) => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_SELECTED',\r\n\t\tpayload: {\r\n\t\t\tid: columnId,\r\n\t\t\tdirection: 'asc',\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst columnUnselected = (columnId) => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_UNSELECTED',\r\n\t\tpayload: columnId,\r\n\t}\r\n}\r\n\r\nconst columnClearedAll = () => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_CLEARED_ALL',\r\n\t}\r\n}\r\n\r\nconst dataChanged = (data) => {\r\n\treturn {\r\n\t\ttype: 'DATA_CHANGED',\r\n\t\tpayload: data,\r\n\t}\r\n}\r\n\r\nconst columnDirectionChanged = (direction, columnId) => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_DIRECTION_CHANGED',\r\n\t\tpayload: direction,\r\n\t\tcolumnId: columnId,\r\n\t}\r\n}\r\n\r\nconst searchFilterSet = (value) => {\r\n\treturn {\r\n\t\ttype: 'SEARCH_FILTER_SET',\r\n\t\tpayload: value,\r\n\t}\r\n}\r\n\r\nconst isMarriedFilterSet = (value) => {\r\n\treturn {\r\n\t\ttype: 'IS_MARRIED_FILTER_SET',\r\n\t\tpayload: value,\r\n\t}\r\n}\r\n\r\nconst shirtSizesFilterSet = (value) => {\r\n\treturn {\r\n\t\ttype: 'SHIRT_SIZES_FILTER_SET',\r\n\t\tpayload: value,\r\n\t}\r\n}\r\n\r\nconst singleRowSelected = (rowId) => {\r\n\treturn {\r\n\t\ttype: 'SINGLE_ROW_SELECTED',\r\n\t\tpayload: rowId,\r\n\t}\r\n} \r\n\r\nconst multipleRowsSelected = (rowId) => {\r\n\treturn {\r\n\t\ttype: 'MULTIPLE_ROWS_SELECTED',\r\n\t\tpayload: rowId,\r\n\t}\r\n} \r\n\r\nconst rowsDeleted = () => {\r\n\treturn {\r\n\t\ttype: 'ROWS_DELETED',\r\n\t}\r\n}\r\n\r\nconst columnWasHidden = (columnId) => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_WAS_HIDDEN',\r\n\t\tpayload: columnId,\r\n\t}\r\n}\r\n\r\nconst columnWasShown = (columnId) => {\r\n\treturn {\r\n\t\ttype: 'COLUMN_WAS_SHOWN',\r\n\t\tpayload: columnId,\r\n\t}\r\n}\r\n\r\nexport {\r\n\tdataLoaded,\r\n\ttoggleVirtualization,\r\n\tcolumnSelected,\r\n\tcolumnUnselected,\r\n\tcolumnClearedAll,\r\n\tdataChanged,\r\n\tcolumnDirectionChanged,\r\n\tsearchFilterSet,\r\n\tisMarriedFilterSet,\r\n\tshirtSizesFilterSet,\r\n\tsingleRowSelected,\r\n\tmultipleRowsSelected,\r\n\trowsDeleted,\r\n\tcolumnWasHidden,\r\n\tcolumnWasShown,\r\n}","const startingState  = {\r\n\t\t\tcolumns: {\r\n\t\t\t\tsortedColumns: [],\r\n\t\t\t\thiddenColumns: [],\r\n\t\t\t},\r\n\t\t\tfilters: {\r\n\t\t\t\tsearchFilter: '',\r\n\t\t\t\tisMarriedFilter: false,\r\n\t\t\t\tshirtSizeFilter: [],\r\n\t\t\t},\r\n\t\t\tgeneral: {\r\n\t\t\t\tselectedRows: [],\r\n\t\t\t\tdata: [],\r\n\t\t\t\tloading: true,\r\n\t\t\t\tvirtualization: true,\r\n\t\t\t}\r\n\t\t}\r\n\r\nconst loadState = () => {\r\n\t// try {\r\n\t// \tconst serializedColumns = JSON.parse(localStorage.getItem('columns'))\r\n\t// \tconst serializedFilters = JSON.parse(localStorage.getItem('filters'))\r\n\r\n\t// \tconst persistedState = {\r\n\t// \t\tcolumns: serializedColumns,\r\n\t// \t\tfilters: serializedFilters,\r\n\t// \t\tgeneral: startingState.general,\r\n\r\n\t// \t}\r\n\t//     return persistedState\r\n\t//   } catch (err) {\r\n\t//     return startingState\r\n\t// }\r\n\treturn startingState\r\n}\r\n\r\nconst saveState = (args) => {\r\n\ttry {\r\n\t\targs.forEach(el => {\r\n    \t\tconst serializedData = JSON.stringify(el.data);\r\n    \t\tlocalStorage.setItem(el.key, serializedData)\r\n\t\t})\r\n\t  } catch (err) {\r\n\t}\r\n}\r\n\r\nexport {\r\n\tloadState,\r\n\tsaveState,\r\n}","const updateColumns = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'COLUMN_SELECTED':\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\tsortedColumns: [\r\n\t\t\t\t\t...state.columns.sortedColumns,\r\n\t\t\t\t\taction.payload\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\tcase 'COLUMN_UNSELECTED':\r\n\t\t\tconst ind = state.columns.sortedColumns.findIndex((el) => el.id === action.payload)\r\n\t\t\tconst newSortedColumns = [\r\n\t\t\t\t...state.columns.sortedColumns.slice(0, ind),\r\n\t\t\t\t...state.columns.sortedColumns.slice(ind + 1)\r\n\t\t\t\t]\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\tsortedColumns: newSortedColumns,\r\n\t\t\t}\t\r\n\t\tcase 'COLUMN_CLEARED_ALL':\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\tsortedColumns: [],\r\n\t\t\t}\r\n\t\tcase 'COLUMN_DIRECTION_CHANGED':\r\n\t\t\tconst column = state.columns.sortedColumns.find((el) => el.id === action.columnId)\r\n\t\t\tconst id = state.columns.sortedColumns.indexOf(column)\r\n\t\t\tconst newColumn = {\r\n\t\t\t\t\t\t...column,\r\n\t\t\t\t\t\tdirection: action.payload\r\n\t\t\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\tsortedColumns: [\r\n\t\t\t\t\t...state.columns.sortedColumns.slice(0, id),\r\n\t\t\t\t\tnewColumn,\r\n\t\t\t\t\t...state.columns.sortedColumns.slice(id + 1)\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\tcase 'COLUMN_WAS_HIDDEN':\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\thiddenColumns: [\r\n\t\t\t\t\t...state.columns.hiddenColumns,\r\n\t\t\t\t\taction.payload,\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\tcase 'COLUMN_WAS_SHOWN':\r\n\t\t\tconst index = state.columns.hiddenColumns.indexOf(action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state.columns,\r\n\t\t\t\thiddenColumns: [\r\n\t\t\t\t\t...state.columns.hiddenColumns.slice(0, index),\r\n\t\t\t\t\t...state.columns.hiddenColumns.slice(index + 1),\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state.columns\r\n\t} \r\n}\r\n\r\nexport default updateColumns","const updateFilters = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SEARCH_FILTER_SET':\r\n\t\t\treturn {\r\n\t\t\t\t...state.filters,\r\n\t\t\t\tsearchFilter: action.payload,\r\n\t\t\t}\r\n\t\tcase 'IS_MARRIED_FILTER_SET':\r\n\t\t\treturn {\r\n\t\t\t\t...state.filters,\r\n\t\t\t\tisMarriedFilter: action.payload,\r\n\t\t\t}\r\n\t\tcase 'SHIRT_SIZES_FILTER_SET':\r\n\t\t\treturn {\r\n\t\t\t\t...state.filters,\r\n\t\t\t\tshirtSizeFilter: action.payload,\r\n\t\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state.filters\r\n\t}\r\n} \r\n\r\nexport default updateFilters","const updateGeneral = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DATA_LOADED':\r\n\t\t\treturn {\r\n\t\t\t\t...state.general,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase 'TOGGLE_VIRTUALIZATION': \r\n\t\t\treturn {\r\n\t\t\t\t...state.general,\r\n\t\t\t\tvirtualization: !state.general.virtualization,\r\n\t\t\t}\r\n\t\tcase 'SINGLE_ROW_SELECTED':\r\n\t\t\treturn {\r\n\t\t\t\t...state.general,\r\n\t\t\t\tselectedRows: [\r\n\t\t\t\t\taction.payload,\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\tcase 'MULTIPLE_ROWS_SELECTED':\r\n\t\t\treturn {\r\n\t\t\t\t...state.general,\r\n\t\t\t\tselectedRows: [\r\n\t\t\t\t\t...state.general.selectedRows,\r\n\t\t\t\t\taction.payload,\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\tcase 'ROWS_DELETED':\r\n\t\t\tconst dataWithoutDeletedRows = [...state.general.data]\r\n\t\t\tstate.general.selectedRows.forEach(el => {\r\n\t\t\t\tconst rowIndex = dataWithoutDeletedRows.findIndex(item => item.id === el)\r\n\t\t\t\tdataWithoutDeletedRows.splice(rowIndex, 1)\r\n\t\t\t})\r\n\t\t\treturn {\r\n\t\t\t\t...state.general,\r\n\t\t\t\tdata: dataWithoutDeletedRows,\r\n\t\t\t\tselectedRows: [],\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state.general\r\n\t}\r\n}\r\n\r\nexport default updateGeneral","import { loadState } from '../utils/local-storage'\r\nimport updateColumns from './update-columns'\r\nimport updateFilters from './update-filters'\r\nimport updateGeneral from './update-general'\r\n\r\nconst initialState = loadState()\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\treturn {\r\n\t\tcolumns: updateColumns(state, action),\r\n\t\tfilters: updateFilters(state, action),\r\n\t\tgeneral: updateGeneral(state, action)\r\n\t}\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction'\r\nimport { saveState } from '../utils/local-storage'\r\nimport reducer from '../reducers/reducer'\r\n\r\nconst store = createStore(reducer, devToolsEnhancer())\r\n\r\nstore.subscribe(() => {\r\n\tconst currentState = store.getState()\r\n\tconst dataToSave = [{\r\n\t\tkey: 'filters',\r\n\t\tdata: currentState.filters\r\n\t},\r\n\t{\r\n\t\tkey: 'columns',\r\n\t\tdata: currentState.columns\r\n\t}]\r\n\tsaveState(dataToSave)\r\n});\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport { columnDirectionChanged } from '../../actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport store from '../../store/store'\r\n\r\nimport './sort-indicators.css'\r\n\r\nconst SortIndicators = ({ columnId, direction, columnDirectionChanged }) => {\r\n\tconst handleChangeDirection = (value) => {\r\n\t\tstore.dispatch(columnDirectionChanged(value, columnId))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"sort-indicators\">\r\n\t\t\t<input type=\"radio\"\r\n\t\t\t\tchecked={direction === 'asc'}\r\n\t\t\t\tonChange={() => handleChangeDirection('asc')}\r\n\t\t\t\tclassName=\"arrow arrow-up\" \r\n\t\t\t/>\r\n\t\t\t<input type=\"radio\"\r\n\t\t\t\tchecked={direction === 'desc'} \r\n\t\t\t\tonChange={() => handleChangeDirection('desc')}\r\n\t\t\t\tclassName=\"arrow arrow-down\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\treturn {}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcolumnDirectionChanged,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortIndicators)","import mockData from './mock-data.json'\r\n\r\nclass DataService {\r\n\tgetData () {\r\n\t\treturn new Promise((resolve) => setTimeout(() => resolve(mockData), 100))\r\n\t}\r\n\r\n\tmapStrToDataField (str) {\r\n\t\tswitch (str) {\r\n\t\t\tcase 'Number':\r\n\t\t\t\treturn 'id'\r\n\t\t\tcase 'First name':\r\n\t\t\t\treturn 'firstName'\r\n\t\t\tcase 'Last name':\r\n\t\t\t\treturn 'lastName'\r\n\t\t\tcase 'Gender':\r\n\t\t\t\treturn 'gender'\r\n\t\t\tcase 'Married':\r\n\t\t\t\treturn 'isMarried'\r\n\t\t\tcase 'Points':\r\n\t\t\t\treturn 'points'\r\n\t\t\tcase 'Shirt size':\r\n\t\t\t\treturn 'shirtSize'\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default DataService","import React from 'react'\r\nimport SortIndicators from '../../sort-indicators/sort-indicators'\r\nimport { columnSelected, columnUnselected, columnClearedAll } from '../../../actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport DataService from '../../../services/data-service'\r\n\r\nconst headers = ['Number', 'First name', 'Last name', 'Gender', 'Married', 'Points', 'Shirt size']\r\n\r\nclass TableHeaders extends React.PureComponent {\r\n\r\n\thandleClick (e, columnId) {\r\n\t\tif (e.target.tagName === 'INPUT') {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst isShiftPressed = e.shiftKey\t\r\n\r\n\t\tthis.toggleColumn(isShiftPressed, columnId)\r\n\t}\r\n\r\n\ttoggleColumn = (isShiftPressed, columnId) => {\r\n\t\tconst { sortedColumns, \r\n\t\t\t\tcolumnSelected, \r\n\t\t\t\tcolumnUnselected, \r\n\t\t\t\tcolumnClearedAll } = this.props\r\n\t\tif (sortedColumns.find((el) => el.id === columnId)) {\r\n\t\t\tcolumnUnselected(columnId)\r\n\t\t} else if (!isShiftPressed && sortedColumns.length !== 0) {\r\n\t\t\tcolumnClearedAll()\r\n\t\t\tcolumnSelected(columnId)\r\n\t\t} else {\r\n\t\t\tcolumnSelected(columnId)\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\tconst { sortedColumns, hiddenColumns, style } = this.props\r\n\t\tconst service = new DataService()\r\n\t\tconst count = (headers.length - hiddenColumns.length)\r\n\t\tconst styleObj = {width:`calc((100% - 60px) / ${count - 1})`}\r\n\r\n\t\tconst items = headers.map(el => {\r\n\t\t\tif (el === 'Number') {\r\n\t\t\t\treturn <div className=\"number\" key={el} >№</div>\r\n\t\t\t}\r\n\r\n\t\t\tif (hiddenColumns.includes(service.mapStrToDataField(el))) {\r\n\t\t\t\t//eslint-disable-next-line\r\n\t\t\t\treturn \r\n\t\t\t}\r\n\t\t\tlet direction = null\r\n\r\n\t\t\tconst classes = ['column-header']\r\n\t\t\tconst columnInfo = sortedColumns.find((column) => column.id === el)\r\n\r\n\t\t\tif (columnInfo) {\r\n\t\t\t\tclasses.push('selected')\r\n\t\t\t\tdirection = columnInfo.direction\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className={classes.join(' ')}\r\n\t\t\t\t\tstyle={styleObj}\r\n\t\t\t\t\tkey={el}\r\n\t\t\t\t\tonClick={(e)=> this.handleClick(e, el)} \r\n\t\t\t\t>\r\n\t\t\t\t\t\t{el}\r\n\t\t\t\t\t<SortIndicators \r\n\t\t\t\t\t\tcolumnId={el}\r\n\t\t\t\t\t\tdirection={direction} />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"table-row table-header\" style={style}>\r\n\t\t\t\t{ items }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ columns: { sortedColumns, hiddenColumns }}) => {\r\n\treturn {\r\n\t\tsortedColumns,\r\n\t\thiddenColumns,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcolumnSelected,\r\n\tcolumnUnselected,\r\n\tcolumnClearedAll,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeaders)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Row = ({ el, selectedRows, cls, onClick, index, style, hiddenColumns }) => {\r\n\tconst fields = ['id', 'firstName', 'lastName', 'gender', 'isMarried', 'points', 'shirtSize']\r\n\tconst classes = cls\r\n\tconst count = (fields.length - hiddenColumns.length)\r\n\tconst styleObj = {width:`calc((100% - 60px) / ${count - 1})`}\r\n\tconst cells = fields.map(field => { \r\n\t\tif (field === 'id') {\r\n\t\t\treturn <div className=\"number\" key={field}>{index}</div> \r\n\t\t}\r\n\t\tif (field === 'isMarried') {\r\n\t\t\tconst married = (el.isMarried ? 'Yes' : 'No')\r\n\t\t\treturn (!(hiddenColumns.includes('isMarried')) ? \r\n\t\t\t\t\t\t<div key={'isMarried'} style={styleObj}>{married}</div> :\r\n\t\t\t\t\t\tnull )\r\n\t\t}\r\n\r\n\t\treturn (!(hiddenColumns.includes(field)) ?\r\n\t\t\t\t\t<div key={field} style={styleObj}>{el[field]}</div> :\r\n\t\t\t\t\tnull )\r\n\t})\r\n\r\n\tel.gender === 'Male' ? classes.push('male') : classes.push('female')\r\n\tif (selectedRows.includes(el.id)) {\r\n\t\tclasses.push('active')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={style || null} \r\n\t\t\tclassName={classes.join(' ')} \r\n\t\t\tonClick={onClick}\r\n\t\t>\r\n\t\t\t{ cells }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ general: { selectedRows }, columns: { hiddenColumns }}) => {\r\n\treturn {\r\n\t\tselectedRows,\r\n\t\thiddenColumns,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Row)","import React from 'react'\r\nimport TableHeaders from '../table-headers/table-headers'\r\nimport Row from '../row/row'\r\nimport { connect } from 'react-redux'\r\nimport { singleRowSelected, multipleRowsSelected } from '../../../actions/actions'\r\nimport store from '../../../store/store'\r\n\r\n\r\nconst NativeTable = ({ data, selectedRows, singleRowSelected, multipleRowsSelected }) => {\r\n\tconst handleSelectRow = (e, rowId) => {\r\n\t\tif (!e.ctrlKey) {\r\n\t\t\tstore.dispatch(singleRowSelected(rowId))\r\n\t\t} else {\r\n\t\t\tstore.dispatch(multipleRowsSelected(rowId))\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst listItems = data.map((el, index) => {\r\n\tconst classes = ['table-row', 'native-table-row']\r\n\t\treturn (\r\n\t\t\t<Row\r\n\t\t\t\tkey={el.firstName + el.lastName}\r\n\t\t\t\tcls={classes}\r\n\t\t\t\tonClick={(e) => handleSelectRow(e, el.id)}\r\n\t\t\t\tel={el}\r\n\t\t\t\tindex={index + 1} \r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"table-wrapper\">\r\n\t\t\t<div className=\"table-inner\">\r\n\t\t\t\t<TableHeaders style={{minHeight: '45px'}}/>\r\n\t\t\t\t{ listItems }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ general: { selectedRows }}) => {\r\n\treturn {\r\n\t\tselectedRows,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsingleRowSelected,\r\n\tmultipleRowsSelected,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NativeTable)","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { singleRowSelected, multipleRowsSelected } from '../../../actions/actions'\r\nimport TableHeaders from '../table-headers/table-headers'\r\nimport Row from '../row/row'\r\nimport store from '../../../store/store'\r\n\r\nclass RowRenderer extends PureComponent {\r\n\r\n\thandleSelectRow = (e, rowId) => {\r\n\t\tif (!e.ctrlKey) {\r\n\t\t\tstore.dispatch(singleRowSelected(rowId))\r\n\t\t} else {\r\n\t\t\tstore.dispatch(multipleRowsSelected(rowId))\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\tif (this.props.index === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<TableHeaders style={this.props.style} />\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tconst el = this.props.data[this.props.index - 1]\r\n\r\n\t\treturn (\r\n\t\t\t<Row \r\n\t\t\t\tstyle={this.props.style} \r\n\t\t\t\tcls={[\"table-row\"]}\r\n\t\t\t\tonClick={(e) => this.handleSelectRow(e, el.id)} \r\n\t\t\t\tel={el}\r\n\t\t\t\tindex={this.props.index} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\treturn {\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsingleRowSelected,\r\n\tmultipleRowsSelected,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RowRenderer)\r\n","import React from 'react'\r\nimport { FixedSizeList  as List } from 'react-window'\r\nimport RowRenderer from '../row-renderer/row-renderer'\r\n\r\nconst VirtualizedTable = ({ data }) => {\r\n\treturn (\r\n\t\t<List\r\n\t\t    height={window.innerHeight}\r\n\t\t    itemCount={data.length + 1}\r\n\t\t    itemSize={45}\r\n\t\t    width={0.95 * window.innerWidth}\r\n\t\t    itemData={data}\r\n\t\t  >\r\n\t\t  \t{ RowRenderer }\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nexport default VirtualizedTable","import _ from 'lodash'\r\n\r\nconst sortItems = (data, fields, directions) => {\r\n\tconst orderedData = _.orderBy(data, fields, directions)\r\n\treturn orderedData\r\n}\r\n\r\nconst findMatches = (data, value, type) => {\r\n\tlet resultData = null\r\n\tswitch (type) {\r\n\t\tcase 'search':\r\n\t\t\tresultData = data.filter(el => {\r\n\t\t\t\tconst values = Object.values(el)\r\n\t\t\t\tconst index = values.findIndex(item => {\r\n\t\t\t\t\tif (typeof item === 'string') {\r\n\t\t\t\t\t\treturn item.toLowerCase().includes(value.toLowerCase())\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t})\r\n\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\treturn el\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tcase 'isMarried':\r\n\t\t\tresultData = data.filter(el => {\r\n\t\t\t\treturn el[type]\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tcase 'shirtSize':\r\n\t\t\tresultData = data.filter(el => {\r\n\t\t\t\treturn value.includes(el[type])\r\n\t\t\t})\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t}\r\n\r\n\treturn resultData\r\n}\r\n\r\nexport {\r\n\tsortItems,\r\n\tfindMatches,\r\n}","import { sortItems, findMatches } from '../utils/utils'\r\nimport DataService from '../services/data-service'\r\n\r\nconst service = new DataService()\r\n\r\nconst getDisplayData = (state) => {\r\n\tconst { data } = state.general \r\n\tconst { searchFilter, isMarriedFilter, shirtSizeFilter } = state.filters\r\n\tconst { sortedColumns } = state.columns\r\n\tlet result = [...data]\r\n\r\n\tif (sortedColumns.length !== 0) {\r\n\t\tconst fields = sortedColumns.map(el => {\r\n\t\t\treturn service.mapStrToDataField(el.id)\r\n\t\t})\r\n\r\n\t\tconst directions = sortedColumns.map(el => {\r\n\t\t\treturn el.direction\r\n\t\t})\r\n\r\n\t\tconst sorted = sortItems(result, fields, directions)\r\n\t\tresult = sorted\r\n\t}\r\n\r\n\tif (searchFilter !== '') {\r\n\t\tconst matched = findMatches(result, searchFilter, 'search')\r\n\t\tresult = matched\r\n\t}\r\n\r\n\tif (isMarriedFilter) {\r\n\t\tconst matched = findMatches(result, isMarriedFilter, 'isMarried')\r\n\t\tresult = matched\r\n\t}\r\n\r\n\tif (shirtSizeFilter.length !== 0) {\r\n\t\tconst matched = findMatches(result, shirtSizeFilter, 'shirtSize')\r\n\t\tresult = matched\r\n\t}\r\n\r\n\treturn result\r\n}\r\n\r\nexport default getDisplayData","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport NativeTable from './native-table/native-table'\r\nimport VirtualizedTable from './virtualized-table/virtualized-table'\r\nimport getDisplayData  from '../../reducers/selectors'\r\n\r\nimport './table.css'\r\n\r\nconst Table = ({ displayData, virtualization }) => {\r\n\r\n\tconst NoData = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"no-data text-center\">Sorry, nothing was found ...</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"table-container\">\r\n\t\t\t{ displayData.length === 0 ? < NoData /> : virtualization ? \r\n\t\t\t\t\t<VirtualizedTable data={displayData} /> : \r\n\t\t\t\t\t<NativeTable data={displayData} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdisplayData: getDisplayData(state),\r\n\t\tvirtualization: state.general.virtualization,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Header = ({ virtualization, handleToggleVirtualization }) => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-dark bg-primary\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t  <a className=\"navbar-brand\" href=\"/\">MOCKDATABASE</a>\r\n\t\t\t\t<button className=\"btn btn-secondary\"\r\n\t\t\t\t\tonClick={handleToggleVirtualization} >\r\n\t\t\t\t\t{virtualization ? 'Disable virtualization' : 'Enable virtualization'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ general: { virtualization }}) => {\r\n\treturn {\r\n\t\tvirtualization\r\n\t}\r\n}\r\n\r\nexport default connect (mapStateToProps)(Header)","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => (<div className=\"loader\">Loading...</div>)\r\n\r\nexport default Spinner","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { searchFilterSet } from '../../actions/actions'\r\nimport store from '../../store/store'\r\n\r\nconst Search = ({ searchFilterSet }) => {\r\n\tconst handleSearch = (e) => {\r\n\t\tconst value = e.target.value.trim()\r\n\t\tstore.dispatch(searchFilterSet(value))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"form-inline my-lg-0\">\r\n\t      <input \r\n\t      \tclassName=\"form-control mr-sm-2\" \r\n\t      \ttype=\"text\" \r\n\t      \tplaceholder=\"Search\"\r\n\t      \tonChange={(e) => handleSearch(e)} />\r\n    \t</form>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\treturn {}\t\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsearchFilterSet,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { isMarriedFilterSet } from '../../../actions/actions'\r\n\r\nconst ToggleMarried = ({ isMarriedFilterSet }) => {\r\n\tconst handleChange = (e) => {\r\n\t\tconst { checked } = e.target \r\n\t\tisMarriedFilterSet(checked)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"custom-control custom-switch ml-5\">\r\n\t      <input \r\n\t      \ttype=\"checkbox\" \r\n\t      \tclassName=\"custom-control-input\" \r\n\t      \tid=\"toggleMarried\"\r\n\t      \tonChange={(e) => handleChange(e)} />\r\n\t      <label \r\n\t      \tclassName=\"custom-control-label\" \r\n\t      \thtmlFor=\"toggleMarried\"\r\n\t      \tstyle={{cursor: 'pointer'}}\r\n\t      >\r\n\t      \tOnly married\r\n\t      </label>\r\n\t    </div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\treturn {}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tisMarriedFilterSet,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleMarried)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated'; \r\nimport { shirtSizesFilterSet} from '../../../actions/actions'\r\nimport store from '../../../store/store'\r\nimport './select-shirt-size'\r\n\r\nconst sizeOptions = [\r\n  { value: 'XS', label: 'XS' },\r\n  { value: 'S', label: 'S' },\r\n  { value: 'M', label: 'M' },\r\n  { value: 'L', label: 'L' },\r\n  { value: 'XL', label: 'XL' },\r\n  { value: '2XL', label: '2XL' },\r\n  { value: '3XL', label: '3XL' }\r\n]\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst SelectShirtSize = ({ shirtSizesFilterSet }) => {\r\n\r\n\tconst handleSelection = (options) => {\r\n\t\tconst selectedOptions = (options ? options.map(el => el.value) : [])\r\n\t\tstore.dispatch(shirtSizesFilterSet(selectedOptions))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"ml-5\">\r\n  \t\t\t<Select\r\n  \t\t\t\tcloseMenuOnSelect={false}\r\n      \t\t\tcomponents={animatedComponents}\r\n\t\t\t    isMulti\r\n\t\t\t    name=\"sizes\"\r\n\t\t\t\tstyles={{\r\n\t\t\t      control: (provided, state) => ({\r\n\t\t\t        ...provided,\r\n\t\t\t        borderColor: state.isFocused ? '#d0eae2' : '#dddddd',\r\n\t\t\t        boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(120,194,173,0.25)' : '#dddddd',\r\n\t\t\t        cursor: 'pointer'\r\n\r\n\t\t\t      }),\r\n\t\t\t    }}\r\n\t\t\t    placeholder={'Select shirt size...'}\r\n\t\t\t    options={sizeOptions}\r\n\t\t\t    className=\"basic-multi-select select-control\"\r\n\t\t\t    classNamePrefix=\"select\"\r\n\t\t\t    onChange={(selectedOptions)=> handleSelection(selectedOptions)}\r\n\t\t\t  />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n\treturn {}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tshirtSizesFilterSet, \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectShirtSize)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { rowsDeleted } from '../../../actions/actions'\r\nimport store from '../../../store/store'\r\n\r\nconst DeleteRowsBtn = ({ selectedRows, rowsDeleted }) => {\r\n\r\n\tconst handleDelete = () => {\r\n\t\tstore.dispatch(rowsDeleted())\r\n\t}\r\n\tconst classes = ['btn', 'btn-primary', 'ml-1', 'btn-sm', 'mt-1']\r\n\tlet disabled = false\r\n\r\n\tif (selectedRows.length === 0) {\r\n\t\tclasses.push('disabled')\r\n\t\tdisabled = true\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"text-center\">\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.join(\" \")}\r\n\t\t\t\tonClick={handleDelete}\r\n\t\t\t\tdisabled={disabled}\r\n\t  \t\t>\r\n\t  \t\t\tDelete lines\r\n\t  \t\t</button>\r\n\t  \t\t<span style={{fontStyle: 'italic'}} className=\"ml-2\">\r\n\t\t\t\tHold down Ctrl to select multiple lines\r\n\t  \t\t</span>\r\n  \t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStoreToProps = ({ general: { selectedRows }}) => {\r\n\treturn {\r\n\t\tselectedRows,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\trowsDeleted,\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(DeleteRowsBtn)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { columnWasHidden, columnWasShown } from '../../../actions/actions'\r\nimport DataService from '../../../services/data-service'\r\n\r\nconst HideColumnsPanel = ({ hiddenColumns, columnWasHidden, columnWasShown }) => {\r\n\tconst service = new DataService()\r\n\tconst columns = ['First name', 'Last name', 'Gender', 'Married', 'Points', 'Shirt size']\r\n\tconst items = columns.map((el, ind) => {\r\n\t\tconst isChecked = (!hiddenColumns.includes(service.mapStrToDataField(el)))\r\n\t\tconst columnId = service.mapStrToDataField(el)\r\n\t\treturn (\r\n\t\t\t<div className=\"custom-control custom-checkbox  hide-columns\" key={el}>\r\n\t\t      <input type=\"checkbox\" \r\n\t\t      \t\tclassName=\"custom-control-input\" \r\n\t\t      \t\tid={`check-${ind}`} \r\n\t\t      \t\tchecked={isChecked} \r\n\t\t      \t\tonChange={(e) => handleCheck(e, columnId)}\r\n\t\t      \t/>\r\n\t\t      <label className=\"custom-control-label\" htmlFor={`check-${ind}`}>\r\n\t\t      \t{ el }\r\n\t\t      </label>\r\n\t\t    </div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst handleCheck = (e, columnId) => {\r\n\t\tif (e.target.checked) {\r\n\t\t\tcolumnWasShown(columnId)\r\n\t\t} \r\n\t\telse {\r\n\t\t\tcolumnWasHidden(columnId)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-group\">\r\n\t\t\t{ items }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ columns: { hiddenColumns }}) => {\r\n\treturn {\r\n\t\thiddenColumns,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcolumnWasHidden,\r\n\tcolumnWasShown,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HideColumnsPanel)","import React from 'react'\r\nimport { CSVLink } from 'react-csv'\r\nimport { connect } from 'react-redux'\r\nimport getDisplayData from '../../../reducers/selectors'\r\n\r\nconst allHeaders = [ \r\n  { label: \"First Name\", key: \"firstName\" },\r\n  { label: \"Last Name\", key: \"lastName\" },\r\n  { label: \"Gender\", key: \"gender\" },\r\n  { label: \"Married\", key: \"isMarried\" },\r\n  { label: \"Points\", key: \"points\" },\r\n  { label: \"Shirt size\", key: \"shirtSize\" }\r\n]\r\n\r\nconst DownloadBtn = ({ displayData, hiddenColumns }) => {\r\n\tconst headers = allHeaders.filter(el => !hiddenColumns.includes(el.key))\r\n\r\n\treturn ( \r\n\t\t<CSVLink data={displayData} headers={headers}>\r\n\t\t  Download data in CSV\r\n\t\t</CSVLink>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdisplayData: getDisplayData(state),\r\n\t\thiddenColumns: state.columns.hiddenColumns,\r\n\t}\r\n} \r\n\r\nexport default connect(mapStateToProps)(DownloadBtn)","import React from 'react'\r\nimport Search from '../search/search'\r\nimport ToggleMarried from './toggle-married/toggle-married'\r\nimport SelectShirtSize from './select-shirt-size/select-shirt-size'\r\nimport DeleteRowsBtn from './delete-rows-btn/delete-rows-btn'\r\nimport HideColumnsPanel from './hide-columns-panel/hide-columns-panel'\r\nimport DownloadBtn from './download-btn/download-btn'\r\n\r\nimport './control-bar.css'\r\n\r\nconst ControlBar = () => {\r\n\r\n\treturn (\r\n\t\t<div className=\"mb-4 d-flex flex-column\" >\r\n\t\t\t<div className=\"row mb-4\">\r\n\t  \t\t\t<div className=\"col-6 col-md-3\">\r\n\t  \t\t\t\t<Search />\r\n\t  \t\t\t</div>\r\n\t  \t\t\t<div className=\"col-6 col-md-2\">\r\n\t  \t\t\t\t<ToggleMarried />\r\n\t  \t\t\t</div>\r\n\t  \t\t\t<div className=\"col-12 col-md-4\">\r\n\t  \t\t\t\t<SelectShirtSize />\r\n\t  \t\t\t</div>\r\n\t\t  \t\t<div className=\"col-8 offset-md-1 col-md-2\">\r\n\t\t  \t\t\t<DownloadBtn />\r\n\t\t\t\t</div>\r\n\t  \t\t</div>\r\n\t  \t\t<div className=\"row\">\r\n\t  \t\t\t<div className=\"col-10 offset-1 col-md-6 offset-md-0\">\r\n\t  \t\t\t\t<HideColumnsPanel />\r\n\t  \t\t\t</div>\r\n\t  \t\t\t<div className=\"col-8 col-md-4 align-items-center mb-0\">\r\n\t  \t\t\t\t<DeleteRowsBtn />\r\n\t  \t\t\t</div>\r\n\t  \t\t</div>\r\n\t  \t</div>\r\n\t)\r\n}\r\n\r\nexport default ControlBar","import React, { Component } from 'react';\r\nimport Table from './components/table/table'\r\nimport Header from './components/header/header'\r\nimport DataService from './services/data-service'\r\nimport Spinner from './components/spinner/spinner'\r\nimport ControlBar from './components/control-bar/control-bar'\r\nimport { connect } from 'react-redux'\r\nimport { dataLoaded, toggleVirtualization } from './actions/actions'\r\n\r\nclass App extends Component {\r\n\r\n  async componentDidMount() {\r\n  \tconst dataService = new DataService()\r\n  \tconst data = await dataService.getData()\r\n  \tthis.props.dataLoaded(data)\r\n  }\r\n\r\n  handleToggleVirtualization = () => {\r\n  \tthis.props.toggleVirtualization()\r\n  }\r\n\r\n  render () {\r\n  \treturn (\r\n\t  \t<>\r\n\t\t  \t<Header handleToggleVirtualization={this.handleToggleVirtualization}/>\r\n\t\t  \t<div className=\"container-fluid\">\r\n\t\t\t  \t<h1 className=\"text-center mb-3 mt-3\">\r\n\t\t\t  \t\tTable with mock data\r\n\t\t\t  \t</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t  \t<main className=\"pt-1\">\r\n\t\t  \t\t\t<ControlBar />\r\n\t\t\t  \t\t{ this.props.loading ? <Spinner /> : <Table />}\r\n\t\t\t  \t</main>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ general: { loading }}) => {\r\n\treturn {\r\n\t\tloading\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tdataLoaded,\r\n\ttoggleVirtualization\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport ErrorBoundry from './components/error-boundry/error-boundry'\r\nimport App from './App'\r\n\r\nimport store from './store/store'\r\n\r\nimport './styles/bootstrap.min.css'\r\n\r\nconst Application = () => {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t\t<App />\r\n\t\t\t</ErrorBoundry>\r\n\t\t</Provider>\r\n\t)\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}